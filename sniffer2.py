#!/usr/bin/python
# -*- coding: utf-8 -*-

import socket, sys
from struct import *

#Programa para visualizar los datos en los paquetes de red
#Se debe ejecutar con permisos de root

# Crear socket
try:
    s = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_TCP)
except socket.error , msg:
    print 'No se pudo crear socket. Error Code : ' + str(msg[0]) + ' Mensaje ' + msg[1]
    sys.exit()
 
# recibir un paquete
while True:
    packet = s.recvfrom(65565)
     
    #Separar la parte de la cabecera
    packet = packet[0]
     
    # Tomar la cabecera IP
    ip_header = packet[0:20]
     
    # Convertirlo a readable human
    iph = unpack('!BBHHHBBH4s4s' , ip_header)
     
    version_ihl = iph[0]
    version = version_ihl >> 4
    ihl = version_ihl & 0xF
     
    iph_length = ihl * 4
     
    ttl = iph[5]
    protocol = iph[6]
    s_addr = socket.inet_ntoa(iph[8]);
    d_addr = socket.inet_ntoa(iph[9]);

    protocolos = {1:"ICMP", 6:"TCP", 17:"UDP"}
    
    print "######################################"
    print "#\tIP\n#"
    print '#Version: ' + str(version) + "\n" + '#IP Header Length: ' + str(ihl) + "\n" + '#TTL: ' + str(ttl) + "\n" + '#Protocolo: ' + str(protocolos[protocol]) + "\n" + '#IP Origen: ' + str(s_addr) + "\n" + '#IP Destino: ' + str(d_addr) + "\n#"
     
    tcp_header = packet[iph_length:iph_length+20]
     
    #now unpack them :)
    tcph = unpack('!HHLLBBHHH' , tcp_header)
     
    source_port = tcph[0]
    dest_port = tcph[1]
    sequence = tcph[2]
    acknowledgement = tcph[3]
    doff_reserved = tcph[4]
    tcph_length = doff_reserved >> 4
    
    
    print "#\tTCP\n#" 
    print '#Puerto Origen: ' + str(source_port) + "\n" + '#Puerto Destino: ' + str(dest_port) + "\n" + '#Numero de Secuencia: ' + str(sequence) + "\n" + '#Acknowledgement: ' + str(acknowledgement) + "\n" + '#Longitud TCP: ' + str(tcph_length) + "\n#"
    print "######################################\n\n"
    h_size = iph_length + tcph_length * 4
    data_size = len(packet) - h_size
     
    #get data from the packet
    data = packet[h_size:]
     
    #print 'Data : ' + repr(data)
   
#!/bin/bash


#
# Programa que realiza transferencias de zona DNS 
# en servidores que lo permitan
# Referencias https://github.com/BrixtonC/ZoneTransfers.sh/blob/master/ZoneTransfers.sh
#

function Filtro {
# Filtering files
#

  echo "[*] Filtering results"
  # Obtiene la primer columna de dig results = domains
  awk '{print $1}' tmp | sed 's/\.$//g' | sort -u > domains.tmp
  # Obtiene la ultima columna de dig results = IPs + domains
  awk '{print $NF}' tmp | sort -u > results.tmp
  # Guarda los dominios de la ultima columna en domains.tmp file
  grep -E "\.$" results.tmp | sed 's/\.$//g' >> domains.tmp
  # Ordena las IP's y las guarda en ipaddress.lst file
  grep -oE "[0-9]{1,3}(\.[0-9]{1,3}){3}" results.tmp | sort -u > ipaddress.txt
  # Sort domains
  sort -u domains.tmp >> domains.txt

}

function nombreServidor {
# Obtiene los nombres del servidor del dominio objetivo
# y los guarda en una variable

  echo "[*] Obteniendo nombre de servidor"
  local NAMESERVERS=`dig NS $DOMAIN | grep -E "IN" | \
    grep -oE "[0-9a-z\.\-]*\.$|[0-9]{1,3}(\.[0-9]{1,3}){3}" | sed 's/\.$//g'`

  ZoneTransfer $NAMESERVERS

}

function Resultado {
# 
#

  echo " [+] Numero de dominios: `cat domains.txt | wc -l`"
  echo " [+] Numeros de IPs: `cat ipaddress.txt | wc -l`"

}

function Usage {
# Modo de empleo

  echo "ERROR: Dominio es requerido"
  echo "Sintaxis:   $0 <domain>"
  echo -e "Ejemplos: $0 cnn.com\n\t  $0 sun.com"
  exit 1

}

function ZoneTransfer() {
# Prueba todos los servidores del dominio objetivo
#

  local I=""
  for I in $@; do

    echo " [+] Probando: $I"
    # dig axfn domain @nameserver --> Zone transfer
    dig axfr $DOMAIN @$I | grep -E "IN" >> tmp

  done

  # Si el resultado no contiene "IN" , el archivo tmp esta vacio
  # with 0 bits
  [ ! -s tmp ] && echo "[!] Fallo al transferir la zona!" && rm tmp && exit 2

}

### SCRIPT
# Revisa el numero de argumentos que se le pasan
[ $# -lt 1 ] || [ $# -gt 1 ] && Usage || DOMAIN=$1

# Funcion NameServers 
nombreServidor

# Funcion Filter 
Filtro

# Funcion Results 
Resultado

# Delete temporal files
#
echo "[*] Borrando archivos temporales"
rm -rf tmp *.tmp

### EXIT
# Code Exit:
# 0 -> Normal exit
# 1 -> Usage/No domain defined
# 2 -> Transfer failed
#
echo "[*] NOTA: Los archivos domains.txt y ipaddress.txt contienen los resultados!"
exit 0

#EOF
##FVE 

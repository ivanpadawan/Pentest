#!/usr/bin/python
# -*- coding: utf-8 -*-

import httplib, urllib2, urllib, ssl, sys, os, datetime



def discover(url, https, file):
	#open file
	fd = open(file,"rb")
	itera = fd.readlines()
	if https:
		for l in itera:
			try:
				context = ssl._create_unverified_context()
				#context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)
				connect = httplib.HTTPSConnection(url, context=context)
				urlValid = url+l
				print ("Testing: " + urlValid)
				registro = datetime.date.today()
				connect.request("GET", urlValid)
				response = connect.getresponse()
				stat = response.status
				if stat == 200:
					print "\tHTTPS"
					print "Código de respuesta: " + str(stat)
					print "Fecha de prueba: " + str(registro)
					print "vulnerability found at " + urlValid
					fd1 = open("reporte.txt","ab")
					fd1.write(urlValid)
					fd1.close()
					next
				else:
					print ("No vulnerability found")
			except Exception as e:
				print e
				
	else:
		for l in itera:
			try:
				connect = httplib.HTTPSConnection(url, timeout=2)
				urlValid = url + l
				print "Testing: " + urlValid
				registro = datetime.date.today()
				connect.request("GET", urlValid)
				response = connect.getresponse()
				code = response.read()
				stat = response.status
				if stat == 200:
					print "\tHTTP"
					print "Código de respuesta: " + str(stat)
					print "Fecha de prueba: " + str(registro)
					print "vulnerability found at " + urlValid
					fd1 = open("reporte.txt","ab")
					urlValid = url+l 
					fd1.write(urlValid)
					fd1.close()
					next
				else:
					print "No vulnerability found"
			except Exception as e:
				print e
# Función que muestra la ayuda
def usage():
	print "\tTest para Path Traversal"
	print "Herramienta para encontrar las vulnerabilidades mas comunes de Path Traversal"
	print "Genera un reporte automatico de las posibles vulnerabilidades"
	print "Ejemplo de uso: traversalV1.py -h 'Muestra esta ayuda' "
	print "\ttraversalV1.py www.sitio.com/ -f archivo 'Prueba el sitio indicado en HTTP' "
	print "\ttraversalV1.py www.sitio.com/ -S -f archivo 'Prueba el sitio indicado en HTTPS' "
	print "\t<>La url debe ir entre comillas dobles<>"

# Inicio, verificación de argumentos pasados
if "-h" in sys.argv:
	usage()
elif not "-f" in sys.argv:
	print "Falta archivo de prueba"
else:
	if "-S" in sys.argv:
		https = True
		url = sys.argv[1]
		file = sys.argv[4]
	else:
		https = False
		url = sys.argv[1]
		file = sys.argv[3]
	discover(url, https, file)




# Programa para probar la vulnerabilidad Path Traversal
# en sitios web
# version 0.1
# Ivan Hernandez Reyes
# Función para realizar las peticiones HTTP o HTTPS
